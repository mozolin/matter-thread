stages:
  - build
  - docs

variables:
    CI_DOCKER_REGISTRY: "ciregistry.espressif.cn:8443"
    ESP_THREAD_BR_PATH: "$CI_PROJECT_DIR"
    CI_TOOLS_PATH: "$CI_PROJECT_DIR/tools/ci"
    ESP_ENV_IMAGE: "$CI_DOCKER_REGISTRY/esp-env-v6.0:1"
    ESP_IDF_HTTP: "https://gitlab-ci-token:${CI_JOB_TOKEN}@${ESP_GITLAB}/espressif/esp-idf.git"

pre_commit:
  stage: .pre
  image: "$CI_DOCKER_REGISTRY/esp-idf-pre-commit:1"
  script:
    - echo "Merge request is from ${CI_COMMIT_REF_NAME} into main"
    - git fetch origin main ${CI_COMMIT_REF_NAME}
    - export from_sha=$(git merge-base HEAD origin/main)
    - echo "Checking changes from ${from_sha} to ${CI_COMMIT_SHA}:"
    - git log --oneline ${from_sha}..${CI_COMMIT_SHA}
    - echo "Modified files:"
    - git diff-tree --no-commit-id --name-only -r ${from_sha} ${CI_COMMIT_SHA}
    - echo "Running pre-commit:"
    - pre-commit run --from ${from_sha} --to ${CI_COMMIT_SHA}
  except:
    - main
  tags:
    - host_test

.submodule_update: &submodule_update
  - cd $ESP_THREAD_BR_PATH
  - git submodule update --init --recursive

.setup_idf: &setup_idf
  - cd $CI_PROJECT_DIR
  - git clone --depth=1 -b $CI_COMMIT_REF_NAME ${ESP_IDF_HTTP} || git clone --depth=1 -b master ${ESP_IDF_HTTP}
  - cd esp-idf
  - git submodule update --init --depth=1
  - ./install.sh
  - . ./export.sh

.setup_idf_master: &setup_idf_master
  - cd $CI_PROJECT_DIR
  - git clone --depth=1 -b master ${ESP_IDF_HTTP}
  - cd esp-idf
  - git submodule update --init --depth=1
  - ./install.sh
  - . ./export.sh

.build_basic_thread_border_router: &build_basic_thread_border_router
  - cd $IDF_PATH/examples/openthread/ot_rcp
  - idf.py set-target esp32h2
  - git rev-parse HEAD
  - idf.py build
  - cd $ESP_THREAD_BR_PATH/examples/basic_thread_border_router
  - git fetch origin main
  - python3 $ESP_THREAD_BR_PATH/example_build_version_check.py basic_thread_border_router esp_ot_cli_extension
  - python3 $ESP_THREAD_BR_PATH/example_build_version_check.py basic_thread_border_router esp_rcp_update
  - rm -rf CMakeLists.txt
  - cp ${CI_TOOLS_PATH}/basic_thread_border_router.cmake CMakeLists.txt
  - idf.py build

.build_m5stack_thread_border_router: &build_m5stack_thread_border_router
  - cd $IDF_PATH/examples/openthread/ot_rcp
  - idf.py set-target esp32h2
  - git rev-parse HEAD
  - idf.py build
  - cd $ESP_THREAD_BR_PATH/examples/m5stack_thread_border_router
  - git fetch origin main
  - python3 $ESP_THREAD_BR_PATH/example_build_version_check.py m5stack_thread_border_router esp_ot_cli_extension
  - python3 $ESP_THREAD_BR_PATH/example_build_version_check.py m5stack_thread_border_router esp_rcp_update
  - rm -rf CMakeLists.txt
  - cp ${CI_TOOLS_PATH}/basic_thread_border_router.cmake CMakeLists.txt
  - idf.py build

.build_local_components: &build_local_components
  - cd $IDF_PATH/examples/openthread/ot_rcp
  - idf.py set-target esp32h2
  - git rev-parse HEAD
  - idf.py build

  - cd $ESP_THREAD_BR_PATH/examples/basic_thread_border_router
  - rm -rf main/idf_component.yml
  - cp ${CI_TOOLS_PATH}/idf_component_local.yml main/idf_component.yml
  - rm -rf CMakeLists.txt
  - cp ${CI_TOOLS_PATH}/basic_thread_border_router.cmake CMakeLists.txt
  - idf.py build

.build_idf_example_ot_br: &build_idf_example_ot_br
  - cd $ESP_THREAD_BR_PATH
  - git fetch origin main
  - python3 example_build_version_check.py ot_br esp_ot_cli_extension
  - cd $IDF_PATH/examples/openthread/ot_br
  - rm -rf CMakeLists.txt
  - cp ${CI_TOOLS_PATH}/ot_br.cmake CMakeLists.txt
  - idf.py set-target esp32s3
  - idf.py build
  - idf.py set-target esp32c6
  - idf.py build

.build_idf_example_ot_br_autostart: &build_idf_example_ot_br_autostart
  - cd $ESP_THREAD_BR_PATH
  - git fetch origin main
  - python3 example_build_version_check.py ot_br esp_ot_cli_extension
  - cd $IDF_PATH/examples/openthread/ot_br
  - rm -rf CMakeLists.txt
  - cp ${CI_TOOLS_PATH}/ot_br.cmake CMakeLists.txt
  - rm -rf sdkconfig.defaults
  - cp ${CI_TOOLS_PATH}/sdkconfig.br.autostart sdkconfig.defaults
  - idf.py set-target esp32s3
  - idf.py build
  - idf.py set-target esp32c6
  - idf.py build

.build_idf_example_ot_cli: &build_idf_example_ot_cli
  - cd $ESP_THREAD_BR_PATH
  - git fetch origin main
  - python3 example_build_version_check.py ot_cli esp_ot_cli_extension
  - cd $IDF_PATH/examples/openthread/ot_cli
  - rm -rf CMakeLists.txt
  - cp ${CI_TOOLS_PATH}/ot_cli.cmake CMakeLists.txt
  - idf.py set-target esp32c6
  - idf.py build
  - idf.py set-target esp32h2
  - idf.py build

build_examples:
    stage: build
    image: espressif/idf:latest
    script:
        - *submodule_update
        - *build_basic_thread_border_router
    tags:
        - build

build_examples_m5stack:
    stage: build
    image: espressif/idf:v5.4.2
    script:
        - *submodule_update
        - *build_m5stack_thread_border_router
    tags:
        - build

build_examples_local_components:
    stage: build
    image: $ESP_ENV_IMAGE
    script:
        - *submodule_update
        - *setup_idf
        - *build_local_components
    tags:
        - build

build_idf_otbr_examples:
    stage: build
    image: $ESP_ENV_IMAGE
    script:
        - *setup_idf_master
        - *build_idf_example_ot_br
    tags:
        - build

build_idf_otbr_autostart_examples:
    stage: build
    image: $ESP_ENV_IMAGE
    script:
        - *setup_idf_master
        - *build_idf_example_ot_br_autostart
    tags:
        - build

build_idf_otcli_examples:
    stage: build
    image: $ESP_ENV_IMAGE
    script:
        - *setup_idf_master
        - *build_idf_example_ot_cli
    tags:
        - build

build_docs:
    stage: build
    image: $CI_DOCKER_REGISTRY/esp-idf-doc-env-v5.1:1-1
    variables:
        ESP_DOCS_LATEST_BRANCH_NAME: "main"
    artifacts:
        when: always
        paths:
            - docs/_build/*/*/*.txt
            - docs/_build/*/*/html/*
        expire_in: 1 days
    script:
        - cd docs
        - pip install -r requirements.txt
        - build-docs -l en
    tags:
        - build_docs

.deploy_docs_template:
    stage: docs
    image: $CI_DOCKER_REGISTRY/esp-idf-doc-env-v5.1:1-1
    needs:
        - build_docs
    variables:
        ESP_DOCS_LATEST_BRANCH_NAME: "main"
    script:
        - source ${CI_PROJECT_DIR}/docs/utils.sh
        - add_doc_server_ssh_keys $DOCS_DEPLOY_PRIVATEKEY $DOCS_DEPLOY_SERVER $DOCS_DEPLOY_SERVER_USER
        - export GIT_VER=$(git describe --always)
        - pip install -r ${CI_PROJECT_DIR}/docs/requirements.txt
        - deploy-docs
    tags:
        - deploy

deploy_docs_preview:
    extends:
        - .deploy_docs_template
    except:
        - main
        - /^release\/v/
        - /^v\d+\.\d+/
    variables:
        TYPE: "preview"
        DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
        DOCS_DEPLOY_PATH: "$DOCS_PREVIEW_PATH"
        DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PREVIEW_DEPLOY_KEY"
        DOCS_DEPLOY_SERVER: "$DOCS_PREVIEW_SERVER"
        DOCS_DEPLOY_SERVER_USER: "$DOCS_PREVIEW_SERVER_USER"
        DOCS_DEPLOY_URL_BASE: "https://$DOCS_PREVIEW_SERVER/projects/esp-thread-br"

deploy_docs_production:
    extends:
        - .deploy_docs_template
    only:
        - main
        - /^release\/v/
        - /^v\d+\.\d+/
    variables:
        TYPE: "preview"
        DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
        DOCS_DEPLOY_PATH: "$DOCS_PROD_PATH"
        DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PROD_DEPLOY_KEY"
        DOCS_DEPLOY_SERVER: "$DOCS_PROD_SERVER"
        DOCS_DEPLOY_SERVER_USER: "$DOCS_PROD_SERVER_USER"
        DOCS_DEPLOY_URL_BASE: "https://docs.espressif.com/projects/esp-thread-br"
